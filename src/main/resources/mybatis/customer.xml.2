<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.syzc.sseip.dao.CustomerDao">
    <resultMap id="Customer" type="com.syzc.sseip.entity.Customer">
        <id column="id" property="id"/>
        <!--<result column="user_id" property="userId"/>-->
        <result column="group_id" property="groupId"/>
        <!--<result column="sex" property="sex" typeHandler="com.syzc.sseip.dao.handler.SexHandler"/>-->
        <!--<result column="disease_type" property="diseaseType" typeHandler="com.syzc.sseip.dao.handler.DiseaseTypeHandler"/>-->
        <!--<result column="website" property="website" typeHandler="com.syzc.sseip.dao.handler.WebsiteHandler"/>-->
        <!--<result column="access_point_type" property="accessPointType" typeHandler="com.syzc.sseip.dao.handler.AccessPointTypeHandler"/>-->
    </resultMap>
    <resultMap id="CustomerDto" type="com.syzc.sseip.entity.CustomerDto">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="group_id" property="groupId"/>
        <!--<result column="sex" property="sex" typeHandler="com.syzc.sseip.dao.handler.SexHandler"/>-->
        <!--<result column="disease_type" property="diseaseType" typeHandler="com.syzc.sseip.dao.handler.DiseaseTypeHandler"/>-->
        <!--<result column="website" property="website" typeHandler="com.syzc.sseip.dao.handler.WebsiteHandler"/>-->
        <!--<result column="access_point_type" property="accessPointType" typeHandler="com.syzc.sseip.dao.handler.AccessPointTypeHandler"/>-->
        <association property="user" column="user_id" select="getUser"/>
        <association property="group" column="group_id" select="getGroup"/>
    </resultMap>
    <resultMap id="User" type="com.syzc.sseip.entity.User">
        <id column="id" property="id"/>
        <result column="real_name" property="realName"/>
        <result column="group_id" property="groupId"/>
        <result column="id_number" property="idNumber"/>
        <!--<result column="role" property="role" typeHandler="com.syzc.sseip.dao.handler.RoleHandler"/>-->
    </resultMap>
    <resultMap id="Group" type="com.syzc.sseip.entity.Group">
        <id column="id" property="id"/>
    </resultMap>
    <insert id="add" useGeneratedKeys="true" keyProperty="entity.id">
        INSERT INTO customer (`name`, `sex`, `age`, `address`, `symptom`, `email`, `tel`, `website`,
        `disease_type`,
        `access_point_type`, `faraway`, `emergency`, `user_id`, `group_id`)
        VALUES
        (
        <choose>
            <when test="entity.name!=null and entity.name!=''">#{entity.name}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.sex!=null">#{entity.sex}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <!--#{entity.sex,typeHandler=SexHandler,javaType=Sex},-->
        <choose>
            <when test="entity.age!=null">#{entity.age}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.address!=null and entity.address!=''">#{entity.address}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.symptom!=null and entity.symptom!=''">#{entity.symptom}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.email!=null and entity.email!=''">#{entity.email}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.tel!=null and entity.tel!=''">#{entity.tel}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.website!=null">#{entity.website}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.diseaseType!=null">#{entity.diseaseType}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.accessPointType!=null">#{entity.accessPointType}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.faraway!=null">#{entity.faraway}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.emergency!=null">#{entity.emergency}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.userId!=null">#{entity.userId}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        <choose>
            <when test="entity.groupId!=null">#{entity.groupId}</when>
            <otherwise>NULL</otherwise>
        </choose>
        )
    </insert>
    <delete id="remove" parameterType="Long">
        delete from customer WHERE id=#{id}
    </delete>
    <update id="update">
        UPDATE
        `customer`
        SET
        `name` = #{entity.name},
        `sex` =
        <choose>
            <when test="entity.sex!=null">#{entity.sex}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        `age` = #{entity.age},
        `address` =
        <choose>
            <when test="entity.address!=null and entity.address!=''">#{entity.address}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        `symptom` =
        <choose>
            <when test="entity.symptom!=null and entity.symptom!=''">#{entity.symptom}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        `email` =
        <choose>
            <when test="entity.email!=null and entity.email!=''">#{entity.email}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        `tel` =
        <choose>
            <when test="entity.tel!=null and entity.tel!=''">#{entity.tel}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        `website` =
        <choose>
            <when test="entity.website!=null">#{entity.website}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        `disease_type` =
        <choose>
            <when test="entity.diseaseType!=null">#{entity.diseaseType}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        `access_point_type` =
        <choose>
            <when test="entity.accessPointType!=null">#{entity.accessPointType}</when>
            <otherwise>NULL</otherwise>
        </choose>
        ,
        `faraway` = #{entity.faraway},
        `emergency` = #{entity.emergency}
        WHERE `id` = #{entity.id} ;
    </update>
    <select id="get" parameterType="Long" resultMap="CustomerDto">
        SELECT
        `id`,
        `name`,
        `sex`,
        `age`,
        `address`,
        `symptom`,
        `email`,
        `tel`,
        `website`,
        `disease_type`,
        `access_point_type`,
        `faraway`,
        `emergency`,
        `added`,
        `user_id`,
        `group_id`
        FROM
        `customer`
        where id=#{id};
    </select>
    <select id="list" resultMap="CustomerDto">
        SELECT
        `id`,
        `name`,
        `sex`,
        `age`,
        `address`,
        `symptom`,
        `email`,
        `tel`,
        `website`,
        `disease_type`,
        `access_point_type`,
        `faraway`,
        `emergency`,
        `added`,
        `user_id`,
        `group_id`
        FROM
        customer
        order by id desc
        LIMIT #{offset}, #{size}
    </select>
    <select id="listByFilter" resultMap="CustomerDto">
        SELECT
        `id`,
        `name`,
        `sex`,
        `age`,
        `address`,
        `symptom`,
        `email`,
        `tel`,
        `website`,
        `disease_type`,
        `access_point_type`,
        `faraway`,
        `emergency`,
        `added`,
        `user_id`,
        `group_id`
        FROM
        customer
        <where>
            <if test="sex != null">
                sex=#{sex}
            </if>
            <if test="website !=null">
                and website=#{website}
            </if>
            <if test="accessPointType !=null">
                and access_point_type=#{accessPointType}
            </if>
            <if test="diseaseType !=null">
                and disease_type=#{diseaseType}
            </if>
            <if test="faraway !=null">
                and faraway=#{faraway}
            </if>
            <if test="emergency !=null">
                and emergency=#{emergency}
            </if>
            <if test="since !=null">
                and added&gt;=#{since}
            </if>
            <if test="till !=null">
                and added&lt;=#{till}
            </if>
            <if test="groupId !=null">
                and group_id=#{groupId}
            </if>
            <if test="userId !=null">
                and user_id=#{userId}
            </if>
        </where>
        order by id desc
        LIMIT #{offset}, #{size, javaType=Byte}
    </select>
    <select id="countByFilter" resultType="Long">
        SELECT
        count(1)
        FROM
        `customer`
        <where>
            <if test="sex != null">
                sex=#{sex}
            </if>
            <if test="website !=null">
                and website=#{website}
            </if>
            <if test="accessPointType !=null">
                and access_point_type=#{accessPointType}
            </if>
            <if test="diseaseType !=null">
                and disease_type=#{diseaseType}
            </if>
            <if test="faraway !=null">
                and faraway=#{faraway}
            </if>
            <if test="emergency !=null">
                and emergency=#{emergency}
            </if>
            <if test="since !=null">
                and added&gt;=#{since}
            </if>
            <if test="till !=null">
                and added&lt;=#{till}
            </if>
            <if test="groupId !=null">
                and group_id=#{groupId}
            </if>
            <if test="userId !=null">
                and user_id=#{userId}
            </if>
        </where>
    </select>
    <select id="count" resultType="Long">
        select count(1) from customer;
    </select>

    <select id="listByUser" resultMap="CustomerDto">
        SELECT
        `id`,
        `name`,
        `sex`,
        `age`,
        `address`,
        `symptom`,
        `email`,
        `tel`,
        `website`,
        `disease_type`,
        `access_point_type`,
        `faraway`,
        `emergency`,
        `added`,
        `user_id`,
        `group_id`
        FROM
        customer
        WHERE user_id=#{userId}
        order by id desc
        LIMIT #{offset}, #{size}
    </select>
    <select id="countByUser" parameterType="Long" resultType="Long">
        select count(1) from customer WHERE user_id=#{userId}
    </select>
    <select id="listByGroup" resultMap="CustomerDto">
        SELECT
        `id`,
        `name`,
        `sex`,
        `age`,
        `address`,
        `symptom`,
        `email`,
        `tel`,
        `website`,
        `disease_type`,
        `access_point_type`,
        `faraway`,
        `emergency`,
        `added`,
        `user_id`,
        `group_id`
        FROM
        customer
        WHERE group_id=#{groupId}
        order by id desc
        LIMIT #{offset}, #{size}
    </select>
    <select id="countByGroup" parameterType="Long" resultType="Long">
        select count(1) from customer WHERE group_id=#{userId}
    </select>
    <!--用于关联查询-->
    <select id="getUser" resultMap="User">
        SELECT
        id,
        username,
        real_name,
        age,
        id_number,
        address,
        phone,
        added,
        role,
        group_id
        FROM user
        WHERE id = #{userId};
    </select>
    <select id="getGroup" resultMap="Group">
        SELECT
        `id`,
        `name`,
        `description`
        FROM `group`
        WHERE id = #{id};
    </select>
</mapper>